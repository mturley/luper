// LuperApp.java
// adapted from boilerplate code generated by androidkickstartr.com on 2/22/13
// NOTE: I included the Spring RestTemplate option at androidkickstartr,
//       because I imagine we'll need to use REST to interact with the
//       database.  However, if we don't need it we can remove it.
// NOTE: ActionBarSherlock is a polyfill providing the new Android 4.2 ActionBar
//       functionality to all versions of android.  To compile this project
//       properly, the actionbarsherlock project must also be in your
//       workspace and/or build path in addition to the Luper project.

// TODO: use this as a skeleton and implement the rest of the app inside it.

package com.teamluper.luper;

import android.support.v4.app.FragmentTransaction;
import android.widget.TextView;
import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.app.ActionBar.Tab;
import com.actionbarsherlock.app.ActionBar.TabListener;
import com.actionbarsherlock.app.SherlockActivity;
import com.actionbarsherlock.view.Menu;
import com.googlecode.androidannotations.annotations.AfterViews;
import com.googlecode.androidannotations.annotations.Background;
import com.googlecode.androidannotations.annotations.EActivity;
import com.googlecode.androidannotations.annotations.UiThread;
import com.googlecode.androidannotations.annotations.ViewById;
import com.googlecode.androidannotations.annotations.rest.RestService;
import com.teamluper.luper.rest.RestClient;

@EActivity(R.layout.activity_main)
public class LuperApp extends SherlockActivity implements TabListener {
  
  @ViewById
  TextView hello;
  @RestService
  RestClient restClient;
  private String[] locations;
 
  @AfterViews
  void afterViews() {
    locations = getResources().getStringArray(R.array.locations);
    configureActionBar();
  }

  @UiThread
  void doSomethingElseOnUiThread() {
    hello.setText("Hi!");
  }

  @Background
  void doSomethingInBackground() {
    restClient.main();
    doSomethingElseOnUiThread();
  }
  
  @Override
  public boolean onCreateOptionsMenu(Menu menu) {
    getSupportMenuInflater();
    return true;
  }

  private void configureActionBar() {
    getSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
    for (String location: locations) {
      Tab tab = getSupportActionBar().newTab();
      tab.setText(location);
      tab.setTabListener(this);
      getSupportActionBar().addTab(tab);
    }
  }
  
  @Override
  public void onTabSelected(Tab tab, FragmentTransaction ft) {
    // stub function!  TODO implement me
  }
  @Override
  public void onTabUnselected(Tab tab, FragmentTransaction ft) {
    // stub function!  TODO implement me
  }
  @Override
  public void onTabReselected(Tab tab, FragmentTransaction ft) {
    // stub function! TODO implement me
  }
}
