// LuperApp.java
// adapted from boilerplate code generated by androidkickstartr.com on 2/22/13
// NOTE: I included the Spring RestTemplate option at androidkickstartr,
//       because I imagine we'll need to use REST to interact with the
//       database.  However, if we don't need it we can remove it.
// NOTE: ActionBarSherlock is a polyfill providing the new Android 4.2 ActionBar
//       functionality to all versions of android.  To compile this project
//       properly, the actionbarsherlock project must also be in your
//       workspace and/or build path in addition to the Luper project.

// TODO: use this as a skeleton and implement the rest of the app inside it.


package com.teamluper.luper;

import java.util.ArrayList;

import org.springframework.web.client.HttpClientErrorException;

import android.accounts.Account;
import android.accounts.AccountManager;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.DialogInterface.OnClickListener;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.actionbarsherlock.app.ActionBar;
import com.actionbarsherlock.app.ActionBar.Tab;
import com.actionbarsherlock.app.ActionBar.TabListener;
import com.actionbarsherlock.app.SherlockActivity;
import com.actionbarsherlock.app.SherlockFragmentActivity;
import com.actionbarsherlock.view.Menu;
import com.actionbarsherlock.view.MenuInflater;
import com.actionbarsherlock.view.MenuItem;
import com.teamluper.luper.AudioRecorderTest;
import com.googlecode.androidannotations.annotations.AfterViews;
import com.googlecode.androidannotations.annotations.Background;
import com.googlecode.androidannotations.annotations.EActivity;
import com.googlecode.androidannotations.annotations.UiThread;
import com.googlecode.androidannotations.annotations.ViewById;
import com.googlecode.androidannotations.annotations.rest.RestService;
import com.teamluper.luper.rest.LuperRestClient;

import com.teamluper.luper.TabHomeFragment;
import com.teamluper.luper.TabProjectsFragment;
import com.teamluper.luper.TabFriendsFragment;

@EActivity
public class LuperApp extends SherlockFragmentActivity {
  
  @ViewById
  TextView hello;
  @RestService
  LuperRestClient rest;
  
  ViewPager mViewPager;
  TabsAdapter mTabsAdapter;
  
  // Additional local variables
  AccountManager am;
  
  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    
    mViewPager = new ViewPager(this);
    mViewPager.setId(R.id.tabcontentpager);
    setContentView(mViewPager);
    
    final ActionBar bar = getSupportActionBar();
    bar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
    
    mTabsAdapter = new TabsAdapter(this, mViewPager);
    mTabsAdapter.addTab(bar.newTab().setText(""+"Home"),
        TabHomeFragment.class, null);
    mTabsAdapter.addTab(bar.newTab().setText(""+"Projects"),
        TabProjectsFragment.class, null);
    mTabsAdapter.addTab(bar.newTab().setText(""+"Friends"),
        TabFriendsFragment.class, null);
    
    mViewPager.setAdapter(mTabsAdapter);
    alertDialog("Welcome to our (almost) featureless Alpha Release!  " +
          "Check out the Settings and try the Database and Recorder tests.");
  }
  
  @Override
  protected void onResume() {
    super.onResume();
    testAccounts();
  }

  @Override
  public boolean onCreateOptionsMenu(Menu menu) {
    MenuInflater inf = getSupportMenuInflater();
    inf.inflate(R.menu.activity_main, menu);
    return true;
  }
  
  @Override
  public boolean onOptionsItemSelected(MenuItem item) {
    if(item.getItemId() == R.id.menu_settings) {
      Intent intent = new Intent(this, LuperSettings_.class);
      startActivity(intent);
    }
    return true;
  }
  
  //method to navigate to the audiorecorder activity
  public void startRecording(View view) {
  	Intent intent = new Intent(this, AudioRecorderTest.class);
  	startActivity(intent);
  }
  
  @Background
  public void testRestAPI(View view) {
    try {
      String t = rest.getTestString();
      alertDialog("Database Connection Test PASS!\n" +
          "Request: GET http://teamluper.com/api/test\n" +
          "Response: '"+t+"'");
    } catch(HttpClientErrorException e) {
      alertDialog("Database Connection Test FAIL!\n" + e.toString());
    }
  }
  
  @Background
  void testAccounts() {
    if(am == null) am = AccountManager.get(this);
    Account[] accounts = am.getAccountsByType("com.google");
    System.out.println("== LUPER ACCOUNTS TESTING ==  found "+accounts.length+" accounts");
    for(int i=0; i<accounts.length; i++) {
      System.out.println(accounts[i].toString());
    }
  }
  
  @UiThread
  void toastMessage(String message) {
    Toast.makeText(getApplicationContext(), message, Toast.LENGTH_SHORT).show();
  }
  
  @UiThread
  void alertDialog(String message) {
    new AlertDialog.Builder(this)
    .setCancelable(false)
    .setMessage(message)
    .setPositiveButton("OK", new OnClickListener() {
      public void onClick(DialogInterface dialog, int which) {
        // do nothing
      }
    })
    .show();
  }
  
  // TabsAdapter class copied from developer.android.com
  public static class TabsAdapter extends FragmentPagerAdapter
  implements ActionBar.TabListener, ViewPager.OnPageChangeListener {
    private final Context mContext;
    private final ActionBar mActionBar;
    private final ViewPager mViewPager;
    private final ArrayList<TabInfo> mTabs = new ArrayList<TabInfo>();

    static final class TabInfo { 
      private final Class<?> clss;
      private final Bundle args;

      TabInfo(Class<?> _class, Bundle _args) {
        clss = _class;
        args = _args;
      }
    }

    public TabsAdapter(SherlockFragmentActivity activity, ViewPager pager) {
      super(activity.getSupportFragmentManager());
      mContext = activity;
      mActionBar = activity.getSupportActionBar();
      mViewPager = pager;
      mViewPager.setAdapter(this);
      mViewPager.setOnPageChangeListener(this);
    }

    public void addTab(ActionBar.Tab tab, Class<?> clss, Bundle args) {
      TabInfo info = new TabInfo(clss, args);
      tab.setTag(info);
      tab.setTabListener(this);
      mTabs.add(info);
      mActionBar.addTab(tab);
      notifyDataSetChanged();
    }

    @Override
    public int getCount() {
      return mTabs.size();
    }
    
    @Override
    public Fragment getItem(int position) {
      TabInfo info = mTabs.get(position);
      return Fragment.instantiate(mContext, info.clss.getName(), info.args);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    }

    @Override
    public void onPageSelected(int position) {
      mActionBar.setSelectedNavigationItem(position);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
    }

    @Override
    public void onTabSelected(Tab tab, FragmentTransaction ft) {
      mViewPager.setCurrentItem(tab.getPosition());
      Object tag = tab.getTag();
      for (int i=0; i<mTabs.size(); i++) {
        if (mTabs.get(i) == tag) {
          mViewPager.setCurrentItem(i);
        }
      }
    }

    @Override
    public void onTabUnselected(Tab tab, FragmentTransaction ft) {
    }

    @Override
    public void onTabReselected(Tab tab, FragmentTransaction ft) {
    }
  }
}
